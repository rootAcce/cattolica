//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.04.03 at 10:42:35 PM CEST 
//


package net.sophis.sophis.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DayTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DayTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Business"/>
 *     &lt;enumeration value="Calendar"/>
 *     &lt;enumeration value="CurrencyBusiness"/>
 *     &lt;enumeration value="ExchangeBusiness"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DayTypeEnum")
@XmlEnum
public enum DayTypeEnum {


    /**
     * When calculating the number of days between two dates the
     * 				count includes only business days.
     * 
     */
    @XmlEnumValue("Business")
    BUSINESS("Business"),

    /**
     * When calculating the number of days between two dates the
     * 				count includes all calendar days.
     * 
     */
    @XmlEnumValue("Calendar")
    CALENDAR("Calendar"),

    /**
     * When calculating the number of days between two dates the
     * 				count includes only currency business days.
     * 
     */
    @XmlEnumValue("CurrencyBusiness")
    CURRENCY_BUSINESS("CurrencyBusiness"),

    /**
     * When calculating the number of days between two dates the
     * 				count includes only stock entity business days.
     * 
     */
    @XmlEnumValue("ExchangeBusiness")
    EXCHANGE_BUSINESS("ExchangeBusiness");
    private final String value;

    DayTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DayTypeEnum fromValue(String v) {
        for (DayTypeEnum c: DayTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
